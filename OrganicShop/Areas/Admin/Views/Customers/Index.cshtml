@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<OrganicShop.Models.Customers>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">  <a href="#">Home  </a>  </li>
        <li class="breadcrumb-item">  <a href="#">Customers </a> </li>
        <li class="breadcrumb-item active" aria-current="page">List </li>
    </ol>
</nav>
<!-- Basic Table-->
<div class="card card-default">
    <div class="card-header">
        <div class="row m-b-30">
            <div class="col-lg-12">
                <form asp-action="Index" method="get" class="form-inline">
                    <div class="d-md-flex">
                        <div class="m-b-10 m-r-15" >
                            <input type="text" class="form-control" style="min-width:300px;" placeholder=" search customer...">
                        </div>
                        &nbsp;
                        <div class="m-b-10">
                            <select class="custom-select" id="idrole" name="idrole" style="min-width:200px;" @*asp-items="ViewBag.RoleList"*@>
                                <option value="0" disable selected>Select role</option>
                            </select>
                        </div>
                        &nbsp;
                        <div class="m-b-10">
                            <select class="custom-select" id="idstatus" name="idstatus" style="min-width:200px;" @*asp-items="ViewBag.StatusList"*@>
                                <option value="" disable selected>Select status</option>
                            </select>
                        </div>
                    </div>
                    &nbsp;
                    <button class="btn btn-primary" type="submit">Search</button>
                </form>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">FullName</th>
                    <th scope="col">Phone</th>
                    <th scope="col">District</th>
                    <th scope="col">Ward</th>
                    <th scope="col">Status</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td scope="row">@item.CustomerID</td>
                        <td>@item.FullName</td>
                        <td>@item.Phone</td>
                        <td>@item.District</td>
                        <td>@item.Ward</td>
                        <td>
                            @if (item.Active)
                            {
                                <span class="badge badge-success">Active</span>
                            }
                            else
                            {
                                <span class="badge badge-danger">Disable</span>
                            }
                        </td>
                        
                        <td>
                            <a asp-action="Details">
                                <i class="mdi mdi-eye" style="font-size: 20px; color:black;padding-left: 15px;" title="View"></i>
                            </a>
                            <a asp-action="Edit">
                                <i class="mdi mdi-pencil" title="Edit" style="font-size: 20px; color:black; padding-left: 15px;"></i>
                            </a>
                        </td>

                       
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer" style="background-color:white">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        <br/><br />
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
        new PagedListRenderOptions(){
        ContainerDivClasses = new[] { "pagination-container" },
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new string[]{"page-item"},
        PageClasses = new string[] {"page-link"},
        MaximumPageNumbersToDisplay = 5,

        })
    </div>
</div>
<!--Pagination-->

